
CREATE TABLE ACCIDENT 
	(
		ACCIDENT_ID NUMBER(38) NOT NULL,
		ACCIDENT_ADDRESS VARCHAR2(4000) NOT NULL,
		ACCIDENT_DATE DATE NOT NULL,
		CONSTRAINT PK_ACCIDENT_ID PRIMARY KEY (ACCIDENT_ID)
	);
	
CREATE SEQUENCE ACCIDENT_SEQ
START WITH 0
MINVALUE 0;
	
CREATE TABLE MEDIA_PROOF
	(
		PROOF_ID NUMBER(38) NOT NULL,
		PROOF VARCHAR2(255),
		CONSTRAINT UNIQUE_MEDIA_PROOF_FIELD UNIQUE (PROOF_ID),
		CONSTRAINT FK_MEDIA_PROOF_ID FOREIGN KEY (PROOF_ID) REFERENCES ACCIDENT (ACCIDENT_ID)
	);
	
CREATE SEQUENCE MEDIA_PROOF_SEQ
START WITH 0
MINVALUE 0;

	
CREATE TABLE TEXT_PROOF
	(
		PROOF_ID NUMBER(38) NOT NULL,
		PROOF VARCHAR2(4000),
		CONSTRAINT FK_TEXT_PROOF_ID FOREIGN KEY (PROOF_ID) REFERENCES ACCIDENT (ACCIDENT_ID),
		CONSTRAINT UNIQUE_TEXT_PROOF_FIELD UNIQUE (PROOF_ID)
	);
	
CREATE SEQUENCE TEXT_PROOF_SEQ
START WITH 0
MINVALUE 0;
	
CREATE TABLE CREATOR_INFO
	(
		CREATOR_ID NUMBER(38) NOT NULL,
		NAME VARCHAR2(255),
		PHONE_NUMBER VARCHAR2(12) NOT NULL,
		OTHER_CONTACTS VARCHAR2(1000),
		CONSTRAINT FK_CREATOR_ID FOREIGN KEY (CREATOR_ID) REFERENCES ACCIDENT (ACCIDENT_ID),
		CONSTRAINT UNIQUE_CREATOR_INFO_FIELD UNIQUE (CREATOR_ID)
	);
	
CREATE SEQUENCE CREATOR_INFO_SEQ
START WITH 0
MINVALUE 0;

	
	
--COMMENT ACCIDENT--	
COMMENT ON TABLE ACCIDENT IS 'Base table contains only address and date of accident and references on proof tables and creator_info table';

COMMENT ON COLUMN ACCIDENT.ACCIDENT_ID IS 'Prymary key to reference on proof tables and creator_info table';

COMMENT ON COLUMN ACCIDENT.ACCIDENT_ADDRESS IS 'Address of accident';

COMMENT ON COLUMN ACCIDENT.ACCIDENT_DATE IS 'Date of accident';
-----------------------

--COMMENT VIDEO_PROOF--

COMMENT ON TABLE VIDEO_PROOF IS 'Table witch contains video proof and type of a proof';

COMMENT ON COLUMN VIDEO_PROOF.ACCIDENT_ID IS 'Foreign key to reference from table accident';

COMMENT ON COLUMN VIDEO_PROOF.ACCIDENT_TYPE IS 'Type of accident (used in java)';

COMMENT ON COLUMN VIDEO_PROOF.PROOF IS 'Video proof';
-----------------------

--COMMENT PHOTO_PROOF--
COMMENT ON TABLE PHOTO_PROOF IS 'Table witch contains photo proof and type of a proof';

COMMENT ON COLUMN PHOTO_PROOF.ACCIDENT_ID IS 'Foreign key to reference from table accident';

COMMENT ON COLUMN PHOTO_PROOF.ACCIDENT_TYPE IS 'Type of accident (used in java)';

COMMENT ON COLUMN PHOTO_PROOF.PROOF IS 'Photo proof';
-----------------------

--COMMENT TEXT_PROOF--
COMMENT ON TABLE TEXT_PROOF IS 'Table witch contains text proof and type of a proof';

COMMENT ON COLUMN TEXT_PROOF.ACCIDENT_ID IS 'Foreign key to reference from table accident';

COMMENT ON COLUMN TEXT_PROOF.ACCIDENT_TYPE IS 'Type of accident (used in java)';

COMMENT ON COLUMN TEXT_PROOF.PROOF IS 'Text proof';
----------------------

--COMMENT CREATOR_INFO--
COMMENT ON TABLE CREATOR_INFO IS 'Table witch contains contacts of a creator';

COMMENT ON COLUMN CREATOR_INFO.ACCIDENT_ID IS 'Foreign key to reference from table accident';

COMMENT ON COLUMN CREATOR_INFO.NAME IS 'Name of a creator';

COMMENT ON COLUMN CREATOR_INFO.PHONE_NUMBER IS 'Creator s phone number';

COMMENT ON COLUMN CREATOR_INFO.OTHER_CONTACTS IS 'Other contact info(not mandatory)';
-------------------------


--INSERTS--
INSERT INTO ACCIDENT (ACCIDENT_ID, ACCIDENT_ADDRESS) VALUES (1,'НОВОМЫТИЩИНСКИЙ ПРОСПЕКТ 45К5')

INSERT INTO MEDIA_PROOF (PROOF_ID) VALUES (2);

INSERT INTO CREATOR_INFO (CREATOR_ID, PHONE_NUMBER) VALUES (1, '785654')

INSERT INTO TEXT_PROOF (TEXT_PROOF_ID, PROOF) VALUES (1, 'TEXT_PROOF')


--DROP TABLES--	
DROP TABLE MEDIA_PROOF

DROP TABLE TEXT_PROOF

DROP TABLE CREATOR_INFO

DROP TABLE ACCIDENT

DROP SEQUENCE MEDIA_PROOF_SEQ

DROP SEQUENCE TEXT_PROOF_SEQ

DROP SEQUENCE CREATOR_INFO_SEQ

DROP SEQUENCE ACCIDENT_SEQ

DELETE FROM CREATOR_INFO

DELETE FROM MEDIA_PROOF

DELETE FROM TEXT_PROOF

DELETE FROM ACCIDENT

SELECT * FROM CREATOR_INFO

SELECT * FROM MEDIA_PROOF

SELECT * FROM TEXT_PROOF

SELECT * FROM ACCIDENT WHERE ACCIDENT_ID = 0

SELECT * FROM ACCIDENT A	
	JOIN TEXT_PROOF T
		ON (A.ACCIDENT_ID = T.PROOF_ID)
	JOIN CREATOR_INFO C
		ON (A.ACCIDENT_ID = C.CREATOR_ID)
	

SELECT * FROM ACCIDENT A
JOIN MEDIA_PROOF M
		ON (A.ACCIDENT_ID = M.PROOF_ID)